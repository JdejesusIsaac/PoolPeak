"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.mungeShareBundleParams = exports.mungePrivateTxParams = void 0;
/// helper functions ===========================================================
const mungeHints = (hints) => {
    return {
        contract_address: hints.contractAddress,
        function_selector: hints.functionSelector,
        calldata: hints.calldata,
        logs: hints.logs,
    };
};
const extractSpecifiedHints = (hints) => {
    return Object.entries(mungeHints(hints))
        .map((kv) => kv[1] ? kv[0] : undefined)
        .filter(v => !!v);
};
const allHintsDisabled = (hints) => {
    return hints ? Object.values(hints).reduce((prv, curr) => !prv && !curr) : false;
};
/// API mungers ================================================================
function mungePrivateTxParams(signedTx, options) {
    const enable = !allHintsDisabled(options === null || options === void 0 ? void 0 : options.hints);
    return [{
            tx: signedTx,
            maxBlockNumber: (options === null || options === void 0 ? void 0 : options.maxBlockNumber) && `0x${options.maxBlockNumber.toString(16)}`,
            preferences: {
                fast: true,
                auction: (options === null || options === void 0 ? void 0 : options.hints) && !allHintsDisabled(options.hints) ? {
                    enable,
                    hint: (options === null || options === void 0 ? void 0 : options.hints) ? extractSpecifiedHints(options.hints) : undefined,
                } : undefined,
            },
        }];
}
exports.mungePrivateTxParams = mungePrivateTxParams;
function mungeShareBundleParams(params) {
    return [Object.assign(Object.assign({}, params), { targetBlock: `0x${params.targetBlock.toString(16)}` })];
}
exports.mungeShareBundleParams = mungeShareBundleParams;
//# sourceMappingURL=api.js.map