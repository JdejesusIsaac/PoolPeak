import { BundleParams, SimBundleOptions, TransactionOptions } from './interfaces';
/**
 * Converts user-specified parameters into parameters for a sendPrivateTransaction call to the MEV-Share API.
 * @param signedTx - Signed transaction to send.
 * @param options - Privacy/execution settings for the transaction.
 * @returns Single-element array containing params object for sendPrivateTransaction call.
 */
export declare function mungePrivateTxParams(signedTx: string, options?: TransactionOptions): {
    tx: string;
    maxBlockNumber: string | 0 | undefined;
    preferences: {
        fast: boolean;
        privacy: {
            hints: string[];
        } | undefined;
        builders: string[] | undefined;
    };
}[];
/**
 * Converts user-specified parameters into parameters for a mev_sendBundle call to the MEV-Share API.
 * @param params - Privacy/execution parameters for the bundle
 * @returns Single-element array containing params object for sendPrivateTransaction call.
 */
export declare function mungeBundleParams(params: BundleParams): {
    body: any[];
    version: string;
    inclusion: {
        block: string;
        maxBlock: string | undefined;
    };
    validity: {
        refund?: {
            bodyIdx: number;
            percent: number;
        }[] | undefined;
        refundConfig?: {
            address: string;
            percent: number;
        }[] | undefined;
    };
    privacy: {
        hints: string[] | undefined;
        builders?: string[] | undefined;
    } | undefined;
    metadata?: {
        originId?: string | undefined;
    } | undefined;
};
/** Convert SimBundleOptions into format required by eth_simBundle.  */
export declare function mungeSimBundleOptions(params: SimBundleOptions): {
    parentBlock: string | 0 | undefined;
    blockNumber: string | 0 | undefined;
    timestamp: string | 0 | undefined;
    gasLimit: string | 0 | undefined;
    baseFee: string | 0n | undefined;
    coinbase?: string | undefined;
    timeout?: number | undefined;
};
//# sourceMappingURL=mungers.d.ts.map