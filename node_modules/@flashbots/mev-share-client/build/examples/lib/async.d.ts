/** async mutex-guarded variable */
export declare class AsyncVar<T> {
    private value;
    private mutex;
    constructor(value: T);
    get(): Promise<T>;
    set(value: T): Promise<void>;
}
/** async mutex-guarded array */
export declare class AsyncArray<T> extends AsyncVar<Array<T>> {
    constructor(value?: Array<T>);
    /** Pushes a new item to the array. */
    push(value: T): Promise<void>;
    /** Filter array in-place. */
    filter(filterFn: (value: T) => boolean): Promise<void>;
    /** Returns true if value is included in the array. */
    includes(value: T): Promise<boolean>;
    /** Returns length of array. */
    length(): Promise<number>;
}
//# sourceMappingURL=async.d.ts.map